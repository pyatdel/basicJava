package kr.or.ddit.controller;

import java.io.IOException;

import java.util.List;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import kr.or.ddit.service.MovieServiceImpl;
import kr.or.ddit.service.ReservationServiceImpl;
import kr.or.ddit.service.iMovieService;
import kr.or.ddit.service.iReservationService;
import kr.or.ddit.vo.MovieVo;
import kr.or.ddit.vo.ReservationVo;

@WebServlet("/reservation.do")
public class ReservationController extends HttpServlet {
    iReservationService reservationService = ReservationServiceImpl.getInstance();
    iMovieService movieService = MovieServiceImpl.getInstance();  // 추가

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String movieNo = req.getParameter("movieNo");  // 영화 번호
        String regNo = req.getParameter("regNo");      // 지역 번호
        String schNo = req.getParameter("schNo");      // 스케줄 번호
        String schDate = req.getParameter("schDate");  // 스케줄 날짜
        
     // 영화 상세 정보 조회
        MovieVo movieDetail = null;
        if (movieNo != null && !movieNo.isEmpty()) {
            MovieVo movie = new MovieVo();  // MovieVo 객체 생성
            movie.setMovieNo(movieNo);       // 영화 번호 설정
            movieDetail = movieService.getMovie(movie);  // MovieVo 객체를 인자로 전달
            req.setAttribute("movieDetail", movieDetail);  // JSP에 전달
        }
        
        // 영화 별 지역 리스트 조회
        if (movieNo != null && !movieNo.isEmpty()) {
            List<ReservationVo> regionList = reservationService.selectRegionByMovie(movieNo);
            System.out.println("movieNo: " + movieNo);
            System.out.println("Region List: " + regionList); // 로그 추가

            req.setAttribute("regionList", regionList);

        }
        
        
        // 추가: regNo가 있는 경우, 극장 리스트 조회
        if (regNo != null && !regNo.isEmpty()) {
            List<ReservationVo> spotList = reservationService.selectSpotByReg(regNo);
            req.setAttribute("spotList", spotList);
        }

        // 추가: schNo가 있는 경우, 특정 상영관의 좌석 목록 조회
        if (schNo != null && !schNo.isEmpty()) {
            List<ReservationVo> seats = reservationService.selectSeatsBySch(schNo);
            req.setAttribute("seats", seats);
        }
        
        // JSP로 포워딩

        req.getRequestDispatcher("/WEB-INF/view/reservation.jsp").forward(req, resp);
    }
}
